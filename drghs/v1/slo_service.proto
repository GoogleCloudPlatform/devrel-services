// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package drghs.v1;

option go_package = ".;drghs_v1";

import "google/api/annotations.proto";
import "resources.proto";
import "service_resources.proto";

//  SLO Rules Service
service SLOService {
  // Lists [Owners][Owner].
  rpc ListOwners(ListOwnersRequest) returns (ListOwnersResponse) {
    option (google.api.http) = {
      get: "/v1/owners"
    };
  }

  // Lists [SLOs][SLO].
  rpc ListOwnerSLOs(ListSLOsRequest) returns (ListSLOsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=owners/*}/slos"
    };
  }

  // Lists [Repositories][Repository].
  rpc ListRepositories(ListRepositoriesRequest)
      returns (ListRepositoriesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=owners/*}/repositories"
    };
  }

  // Lists [SLOs][SLO].
  rpc ListSLOs(ListSLOsRequest) returns (ListSLOsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=owners/*/repositories/*}/slos"
    };
  }
}

// Request message for [SLOService.ListOwners][].
message ListOwnersRequest {
  // Optional. Limit the number of [Owners][Owner] to include in the
  // response. Fewer Owners than requested might be returned.
  //
  // The maximum page size is `100`. If unspecified, the page size will be the
  // maximum. Further [Owners][Owner] can subsequently be obtained
  // by including the [ListOwnersResponse.next_page_token][] in a
  // subsequent request.
  int32 page_size = 1;

  // Optional. To request the first page of results, `page_token` must be empty.
  // To request the next page of results, page_token must be the value of
  // [ListOwnersResponse.next_page_token][] returned by a previous call to
  // [SLOService.ListOwners][].
  //
  // The page token is valid for only 2 hours.
  string page_token = 2;

  // Optional. Filter expression used to only include resources that match the
  // filter in the response. Filter must be in following the format:
  //
  //     field == "value"
  //
  // Valid filter fields are: `owner.name`.
  string filter = 3;

  // Optional. Specify how the results should be sorted.
  // Supported fields for sorting are: `name`.
  // Prefix with `-` to specify descending order, e.g. `-name`.
  string order_by = 4;
}

// Response message for [SLOService.ListOwners][].
message ListOwnersResponse {
  // The list of [Owners][Owner].
  repeated drghs.v1.Owner owners = 1;

  // A token to retrieve the next page of results, or empty if there are no
  // more results in the list. Pass this value in
  // [ListOwnersRequest.page_token][] to retrieve the next page of
  // results.
  string next_page_token = 2;

  // The total number of [Owners][Owner] that matched the query.
  int32 total = 3;
}

// Request message for [SLOService.ListSLOs][].
message ListSLOsRequest {
  // Required. The resource name of the repository associated with the
  // [SLOs][SLO], in the format `owners/*/repositories/*`.
  string parent = 1;

  // Optional. Limit the number of [Issues][Issue] to include in the
  // response. Fewer Issues than requested might be returned.
  //
  // The maximum page size is `100`. If unspecified, the page size will be the
  // maximum. Further [SLOs][SLO] can subsequently be obtained
  // by including the [ListSLOsResponse.next_page_token][] in a
  // subsequent request.
  int32 page_size = 2;

  // Optional. To request the first page of results, `page_token` must be empty.
  // To request the next page of results, page_token must be the value of
  // [ListSLOsResponse.next_page_token][] returned by a previous call to
  // [SLOService.ListSLOs][].
  //
  // The page token is valid for only 2 hours.
  string page_token = 3;

  // Optional. Filter expression used to only include resources that match the
  // filter in the response. Filter must be in following the format:
  //
  //     field == value
  //
  // Valid filter fields are: `slo.requires_assignee, slo.github_labels`,
  // `slo.excluded_github_labels`, `slo.applies_to_isssues`,
  // `slo.applies_to_prs`.
  string filter = 4;
}

// Response message for [SLOService.ListSLOs][].
message ListSLOsResponse {
  // The list of [SLOs][SLO].
  repeated drghs.v1.SLO slos = 1;

  // A token to retrieve the next page of results, or empty if there are no
  // more results in the list. Pass this value in
  // [ListSLOsRequest.page_token][] to retrieve the next page of
  // results.
  string next_page_token = 2;

  // The total number of [SLOs][SLO] that matched the query.
  int32 total = 3;
}