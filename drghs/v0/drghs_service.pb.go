// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drghs_service.proto

package drghs_v0

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Priority int32

const (
	Priority_P0 Priority = 0
	Priority_P1 Priority = 1
	Priority_P2 Priority = 2
	Priority_P3 Priority = 3
	Priority_P4 Priority = 4
)

var Priority_name = map[int32]string{
	0: "P0",
	1: "P1",
	2: "P2",
	3: "P3",
	4: "P4",
}

var Priority_value = map[string]int32{
	"P0": 0,
	"P1": 1,
	"P2": 2,
	"P3": 3,
	"P4": 4,
}

func (x Priority) String() string {
	return proto.EnumName(Priority_name, int32(x))
}

func (Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{0}
}

type IssueType int32

const (
	IssueType_UNKNOWN  IssueType = 0
	IssueType_BUG      IssueType = 1
	IssueType_FEATURE  IssueType = 2
	IssueType_QUESTION IssueType = 3
	IssueType_CLEANUP  IssueType = 4
	IssueType_PROCESS  IssueType = 5
)

var IssueType_name = map[int32]string{
	0: "UNKNOWN",
	1: "BUG",
	2: "FEATURE",
	3: "QUESTION",
	4: "CLEANUP",
	5: "PROCESS",
}

var IssueType_value = map[string]int32{
	"UNKNOWN":  0,
	"BUG":      1,
	"FEATURE":  2,
	"QUESTION": 3,
	"CLEANUP":  4,
	"PROCESS":  5,
}

func (x IssueType) String() string {
	return proto.EnumName(IssueType_name, int32(x))
}

func (IssueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{1}
}

type UpdateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{0}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

type UpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{1}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

type GetIssueRequest struct {
	Repo                 string   `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Issue                int32    `protobuf:"varint,2,opt,name=issue,proto3" json:"issue,omitempty"`
	IncludeComments      bool     `protobuf:"varint,3,opt,name=include_comments,json=includeComments,proto3" json:"include_comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIssueRequest) Reset()         { *m = GetIssueRequest{} }
func (m *GetIssueRequest) String() string { return proto.CompactTextString(m) }
func (*GetIssueRequest) ProtoMessage()    {}
func (*GetIssueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{2}
}

func (m *GetIssueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssueRequest.Unmarshal(m, b)
}
func (m *GetIssueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssueRequest.Marshal(b, m, deterministic)
}
func (m *GetIssueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssueRequest.Merge(m, src)
}
func (m *GetIssueRequest) XXX_Size() int {
	return xxx_messageInfo_GetIssueRequest.Size(m)
}
func (m *GetIssueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssueRequest proto.InternalMessageInfo

func (m *GetIssueRequest) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *GetIssueRequest) GetIssue() int32 {
	if m != nil {
		return m.Issue
	}
	return 0
}

func (m *GetIssueRequest) GetIncludeComments() bool {
	if m != nil {
		return m.IncludeComments
	}
	return false
}

type ListIssuesRequest struct {
	Repo                 string   `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	PullRequest          bool     `protobuf:"varint,2,opt,name=pull_request,json=pullRequest,proto3" json:"pull_request,omitempty"`
	Closed               bool     `protobuf:"varint,3,opt,name=closed,proto3" json:"closed,omitempty"`
	IncludeComments      bool     `protobuf:"varint,4,opt,name=include_comments,json=includeComments,proto3" json:"include_comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIssuesRequest) Reset()         { *m = ListIssuesRequest{} }
func (m *ListIssuesRequest) String() string { return proto.CompactTextString(m) }
func (*ListIssuesRequest) ProtoMessage()    {}
func (*ListIssuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{3}
}

func (m *ListIssuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIssuesRequest.Unmarshal(m, b)
}
func (m *ListIssuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIssuesRequest.Marshal(b, m, deterministic)
}
func (m *ListIssuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIssuesRequest.Merge(m, src)
}
func (m *ListIssuesRequest) XXX_Size() int {
	return xxx_messageInfo_ListIssuesRequest.Size(m)
}
func (m *ListIssuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIssuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIssuesRequest proto.InternalMessageInfo

func (m *ListIssuesRequest) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *ListIssuesRequest) GetPullRequest() bool {
	if m != nil {
		return m.PullRequest
	}
	return false
}

func (m *ListIssuesRequest) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *ListIssuesRequest) GetIncludeComments() bool {
	if m != nil {
		return m.IncludeComments
	}
	return false
}

type Response struct {
	Error                string    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Issue                *Status   `protobuf:"bytes,2,opt,name=issue,proto3" json:"issue,omitempty"`
	Issues               []*Status `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetIssue() *Status {
	if m != nil {
		return m.Issue
	}
	return nil
}

func (m *Response) GetIssues() []*Status {
	if m != nil {
		return m.Issues
	}
	return nil
}

type Request struct {
	Configs              []string `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{5}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetConfigs() []string {
	if m != nil {
		return m.Configs
	}
	return nil
}

type GitHubUser struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GitHubUser) Reset()         { *m = GitHubUser{} }
func (m *GitHubUser) String() string { return proto.CompactTextString(m) }
func (*GitHubUser) ProtoMessage()    {}
func (*GitHubUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{6}
}

func (m *GitHubUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitHubUser.Unmarshal(m, b)
}
func (m *GitHubUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitHubUser.Marshal(b, m, deterministic)
}
func (m *GitHubUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitHubUser.Merge(m, src)
}
func (m *GitHubUser) XXX_Size() int {
	return xxx_messageInfo_GitHubUser.Size(m)
}
func (m *GitHubUser) XXX_DiscardUnknown() {
	xxx_messageInfo_GitHubUser.DiscardUnknown(m)
}

var xxx_messageInfo_GitHubUser proto.InternalMessageInfo

func (m *GitHubUser) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GitHubUser) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

type GitHubComment struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User                 *GitHubUser          `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Body                 string               `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GitHubComment) Reset()         { *m = GitHubComment{} }
func (m *GitHubComment) String() string { return proto.CompactTextString(m) }
func (*GitHubComment) ProtoMessage()    {}
func (*GitHubComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{7}
}

func (m *GitHubComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitHubComment.Unmarshal(m, b)
}
func (m *GitHubComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitHubComment.Marshal(b, m, deterministic)
}
func (m *GitHubComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitHubComment.Merge(m, src)
}
func (m *GitHubComment) XXX_Size() int {
	return xxx_messageInfo_GitHubComment.Size(m)
}
func (m *GitHubComment) XXX_DiscardUnknown() {
	xxx_messageInfo_GitHubComment.DiscardUnknown(m)
}

var xxx_messageInfo_GitHubComment proto.InternalMessageInfo

func (m *GitHubComment) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GitHubComment) GetUser() *GitHubUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GitHubComment) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GitHubComment) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GitHubComment) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Compliance struct {
	Compliant            bool     `protobuf:"varint,1,opt,name=compliant,proto3" json:"compliant,omitempty"`
	Duration             int32    `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Compliance) Reset()         { *m = Compliance{} }
func (m *Compliance) String() string { return proto.CompactTextString(m) }
func (*Compliance) ProtoMessage()    {}
func (*Compliance) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{8}
}

func (m *Compliance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Compliance.Unmarshal(m, b)
}
func (m *Compliance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Compliance.Marshal(b, m, deterministic)
}
func (m *Compliance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Compliance.Merge(m, src)
}
func (m *Compliance) XXX_Size() int {
	return xxx_messageInfo_Compliance.Size(m)
}
func (m *Compliance) XXX_DiscardUnknown() {
	xxx_messageInfo_Compliance.DiscardUnknown(m)
}

var xxx_messageInfo_Compliance proto.InternalMessageInfo

func (m *Compliance) GetCompliant() bool {
	if m != nil {
		return m.Compliant
	}
	return false
}

func (m *Compliance) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type ComplianceResponse struct {
	Compliant            bool     `protobuf:"varint,1,opt,name=compliant,proto3" json:"compliant,omitempty"`
	Duration             int32    `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComplianceResponse) Reset()         { *m = ComplianceResponse{} }
func (m *ComplianceResponse) String() string { return proto.CompactTextString(m) }
func (*ComplianceResponse) ProtoMessage()    {}
func (*ComplianceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{9}
}

func (m *ComplianceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComplianceResponse.Unmarshal(m, b)
}
func (m *ComplianceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComplianceResponse.Marshal(b, m, deterministic)
}
func (m *ComplianceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceResponse.Merge(m, src)
}
func (m *ComplianceResponse) XXX_Size() int {
	return xxx_messageInfo_ComplianceResponse.Size(m)
}
func (m *ComplianceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceResponse proto.InternalMessageInfo

func (m *ComplianceResponse) GetCompliant() bool {
	if m != nil {
		return m.Compliant
	}
	return false
}

func (m *ComplianceResponse) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type Status struct {
	RuleId               int32                `protobuf:"varint,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	SloId                int32                `protobuf:"varint,2,opt,name=slo_id,json=sloId,proto3" json:"slo_id,omitempty"`
	Repo                 string               `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Prioroty             Priority             `protobuf:"varint,4,opt,name=prioroty,proto3,enum=drghs.v0.Priority" json:"prioroty,omitempty"`
	Type                 IssueType            `protobuf:"varint,5,opt,name=type,proto3,enum=drghs.v0.IssueType" json:"type,omitempty"`
	PriorityUnknown      bool                 `protobuf:"varint,6,opt,name=PriorityUnknown,proto3" json:"PriorityUnknown,omitempty"`
	Labels               []string             `protobuf:"bytes,7,rep,name=Labels,proto3" json:"Labels,omitempty"`
	LastGooglerUpdate    *timestamp.Timestamp `protobuf:"bytes,8,opt,name=last_googler_update,json=lastGooglerUpdate,proto3" json:"last_googler_update,omitempty"`
	LastUserUpdate       *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_user_update,json=lastUserUpdate,proto3" json:"last_user_update,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	PullRequest          bool                 `protobuf:"varint,11,opt,name=pull_request,json=pullRequest,proto3" json:"pull_request,omitempty"`
	Approved             bool                 `protobuf:"varint,12,opt,name=approved,proto3" json:"approved,omitempty"`
	Closed               bool                 `protobuf:"varint,13,opt,name=closed,proto3" json:"closed,omitempty"`
	ClosedBy             *GitHubUser          `protobuf:"bytes,14,opt,name=closed_by,json=closedBy,proto3" json:"closed_by,omitempty"`
	Blocked              bool                 `protobuf:"varint,15,opt,name=blocked,proto3" json:"blocked,omitempty"`
	ReleaseBlocking      bool                 `protobuf:"varint,16,opt,name=release_blocking,json=releaseBlocking,proto3" json:"release_blocking,omitempty"`
	Body                 bool                 `protobuf:"varint,17,opt,name=body,proto3" json:"body,omitempty"`
	Commit               string               `protobuf:"bytes,18,opt,name=commit,proto3" json:"commit,omitempty"`
	UpdatedCompliance    *ComplianceResponse  `protobuf:"bytes,19,opt,name=updated_compliance,json=updatedCompliance,proto3" json:"updated_compliance,omitempty"`
	ResolutionCompliance *ComplianceResponse  `protobuf:"bytes,20,opt,name=resolution_compliance,json=resolutionCompliance,proto3" json:"resolution_compliance,omitempty"`
	ComplianceUpdates    *Compliance          `protobuf:"bytes,21,opt,name=compliance_updates,json=complianceUpdates,proto3" json:"compliance_updates,omitempty"`
	ComplianceResolution *Compliance          `protobuf:"bytes,22,opt,name=compliance_resolution,json=complianceResolution,proto3" json:"compliance_resolution,omitempty"`
	IssueId              int32                `protobuf:"varint,23,opt,name=issue_id,json=issueId,proto3" json:"issue_id,omitempty"`
	Url                  string               `protobuf:"bytes,24,opt,name=url,proto3" json:"url,omitempty"`
	Assignees            []*GitHubUser        `protobuf:"bytes,25,rep,name=assignees,proto3" json:"assignees,omitempty"`
	Reporter             *GitHubUser          `protobuf:"bytes,26,opt,name=reporter,proto3" json:"reporter,omitempty"`
	Title                string               `protobuf:"bytes,27,opt,name=title,proto3" json:"title,omitempty"`
	Comments             []*GitHubComment     `protobuf:"bytes,28,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_77ad46a72c8508bb, []int{10}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetRuleId() int32 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *Status) GetSloId() int32 {
	if m != nil {
		return m.SloId
	}
	return 0
}

func (m *Status) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Status) GetPrioroty() Priority {
	if m != nil {
		return m.Prioroty
	}
	return Priority_P0
}

func (m *Status) GetType() IssueType {
	if m != nil {
		return m.Type
	}
	return IssueType_UNKNOWN
}

func (m *Status) GetPriorityUnknown() bool {
	if m != nil {
		return m.PriorityUnknown
	}
	return false
}

func (m *Status) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Status) GetLastGooglerUpdate() *timestamp.Timestamp {
	if m != nil {
		return m.LastGooglerUpdate
	}
	return nil
}

func (m *Status) GetLastUserUpdate() *timestamp.Timestamp {
	if m != nil {
		return m.LastUserUpdate
	}
	return nil
}

func (m *Status) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Status) GetPullRequest() bool {
	if m != nil {
		return m.PullRequest
	}
	return false
}

func (m *Status) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

func (m *Status) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *Status) GetClosedBy() *GitHubUser {
	if m != nil {
		return m.ClosedBy
	}
	return nil
}

func (m *Status) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

func (m *Status) GetReleaseBlocking() bool {
	if m != nil {
		return m.ReleaseBlocking
	}
	return false
}

func (m *Status) GetBody() bool {
	if m != nil {
		return m.Body
	}
	return false
}

func (m *Status) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Status) GetUpdatedCompliance() *ComplianceResponse {
	if m != nil {
		return m.UpdatedCompliance
	}
	return nil
}

func (m *Status) GetResolutionCompliance() *ComplianceResponse {
	if m != nil {
		return m.ResolutionCompliance
	}
	return nil
}

func (m *Status) GetComplianceUpdates() *Compliance {
	if m != nil {
		return m.ComplianceUpdates
	}
	return nil
}

func (m *Status) GetComplianceResolution() *Compliance {
	if m != nil {
		return m.ComplianceResolution
	}
	return nil
}

func (m *Status) GetIssueId() int32 {
	if m != nil {
		return m.IssueId
	}
	return 0
}

func (m *Status) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Status) GetAssignees() []*GitHubUser {
	if m != nil {
		return m.Assignees
	}
	return nil
}

func (m *Status) GetReporter() *GitHubUser {
	if m != nil {
		return m.Reporter
	}
	return nil
}

func (m *Status) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Status) GetComments() []*GitHubComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func init() {
	proto.RegisterEnum("drghs.v0.Priority", Priority_name, Priority_value)
	proto.RegisterEnum("drghs.v0.IssueType", IssueType_name, IssueType_value)
	proto.RegisterType((*UpdateRequest)(nil), "drghs.v0.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "drghs.v0.UpdateResponse")
	proto.RegisterType((*GetIssueRequest)(nil), "drghs.v0.GetIssueRequest")
	proto.RegisterType((*ListIssuesRequest)(nil), "drghs.v0.ListIssuesRequest")
	proto.RegisterType((*Response)(nil), "drghs.v0.Response")
	proto.RegisterType((*Request)(nil), "drghs.v0.Request")
	proto.RegisterType((*GitHubUser)(nil), "drghs.v0.GitHubUser")
	proto.RegisterType((*GitHubComment)(nil), "drghs.v0.GitHubComment")
	proto.RegisterType((*Compliance)(nil), "drghs.v0.Compliance")
	proto.RegisterType((*ComplianceResponse)(nil), "drghs.v0.ComplianceResponse")
	proto.RegisterType((*Status)(nil), "drghs.v0.Status")
}

func init() { proto.RegisterFile("drghs_service.proto", fileDescriptor_77ad46a72c8508bb) }

var fileDescriptor_77ad46a72c8508bb = []byte{
	// 1119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4d, 0x53, 0xe3, 0x46,
	0x13, 0x5e, 0x7f, 0x60, 0xcb, 0x0d, 0xd8, 0xf2, 0x80, 0x61, 0x30, 0x54, 0xbd, 0xbc, 0x4a, 0x55,
	0xe2, 0xec, 0xc1, 0xb0, 0x66, 0x2f, 0x39, 0x02, 0xcb, 0x7a, 0x9d, 0xa5, 0x8c, 0x57, 0xc6, 0xc9,
	0xd1, 0x25, 0x5b, 0x83, 0xa3, 0x5a, 0x59, 0xa3, 0x68, 0x46, 0xa4, 0x7c, 0xcd, 0x3d, 0xa7, 0xfc,
	0x99, 0xfc, 0x8f, 0x3d, 0xe6, 0x9a, 0x1f, 0x92, 0x9a, 0x0f, 0x7d, 0x80, 0x09, 0xa4, 0x72, 0xd2,
	0x74, 0xcf, 0xd3, 0xcf, 0xf4, 0xcc, 0x3c, 0xdd, 0x1a, 0xd8, 0x71, 0xa3, 0xc5, 0x4f, 0x6c, 0xca,
	0x48, 0x74, 0xef, 0xcd, 0x49, 0x37, 0x8c, 0x28, 0xa7, 0xc8, 0x90, 0xce, 0xee, 0xfd, 0x69, 0xfb,
	0x7f, 0x0b, 0x4a, 0x17, 0x3e, 0x39, 0x91, 0xfe, 0x59, 0x7c, 0x77, 0xc2, 0xbd, 0x25, 0x61, 0xdc,
	0x59, 0x86, 0x0a, 0xda, 0x3e, 0xd2, 0x00, 0x27, 0xf4, 0x4e, 0x9c, 0x20, 0xa0, 0xdc, 0xe1, 0x1e,
	0x0d, 0x98, 0x9a, 0xb5, 0x1a, 0xb0, 0x3d, 0x09, 0x5d, 0x87, 0x13, 0x9b, 0xfc, 0x1c, 0x13, 0xc6,
	0x2d, 0x13, 0xea, 0x89, 0x83, 0x85, 0x34, 0x60, 0xc4, 0xba, 0x83, 0x46, 0x9f, 0xf0, 0x01, 0x63,
	0x71, 0x02, 0x42, 0x08, 0xca, 0x11, 0x09, 0x29, 0x2e, 0x1c, 0x17, 0x3a, 0x35, 0x5b, 0x8e, 0xd1,
	0x2e, 0x6c, 0x78, 0x02, 0x83, 0x8b, 0xc7, 0x85, 0xce, 0x86, 0xad, 0x0c, 0xf4, 0x2d, 0x98, 0x5e,
	0x30, 0xf7, 0x63, 0x97, 0x4c, 0xe7, 0x74, 0xb9, 0x24, 0x01, 0x67, 0xb8, 0x74, 0x5c, 0xe8, 0x18,
	0x76, 0x43, 0xfb, 0x2f, 0xb5, 0xdb, 0xfa, 0xad, 0x00, 0xcd, 0x6b, 0x8f, 0xa9, 0x95, 0xd8, 0x73,
	0x4b, 0xfd, 0x1f, 0xb6, 0xc2, 0xd8, 0xf7, 0xa7, 0x91, 0xc2, 0xc8, 0x15, 0x0d, 0x7b, 0x53, 0xf8,
	0x92, 0xb0, 0x3d, 0xa8, 0xcc, 0x7d, 0xca, 0x88, 0xab, 0x57, 0xd3, 0xd6, 0x93, 0xf9, 0x94, 0x9f,
	0xce, 0x27, 0x02, 0x23, 0x39, 0x03, 0xb1, 0x39, 0x12, 0x45, 0x34, 0xd2, 0x69, 0x28, 0x03, 0x7d,
	0x9d, 0xdf, 0xf2, 0x66, 0xcf, 0xec, 0x26, 0xb7, 0xd2, 0x1d, 0x73, 0x87, 0xc7, 0x2c, 0x39, 0x84,
	0x0e, 0x54, 0xe4, 0x40, 0x6c, 0xbd, 0xf4, 0x24, 0x50, 0xcf, 0x5b, 0x5f, 0x41, 0x35, 0xd9, 0x01,
	0x86, 0xea, 0x9c, 0x06, 0x77, 0xde, 0x82, 0xe1, 0xc2, 0x71, 0xa9, 0x53, 0xb3, 0x13, 0xd3, 0xea,
	0x01, 0xf4, 0x3d, 0xfe, 0x21, 0x9e, 0x4d, 0x18, 0x89, 0x50, 0x1d, 0x8a, 0x9e, 0x2b, 0xf3, 0xda,
	0xb0, 0x8b, 0x9e, 0x2b, 0x52, 0xf5, 0xe9, 0xc2, 0x0b, 0x64, 0x52, 0x35, 0x5b, 0x19, 0xd6, 0x97,
	0x02, 0x6c, 0xab, 0x20, 0xbd, 0xbf, 0xb5, 0xb8, 0x0e, 0x94, 0x63, 0x46, 0x22, 0xbd, 0x97, 0xdd,
	0x2c, 0xc5, 0x6c, 0x2d, 0x5b, 0x22, 0xd0, 0x77, 0x00, 0xf3, 0x88, 0x38, 0x9c, 0xb8, 0x53, 0x87,
	0xcb, 0xf3, 0xdd, 0xec, 0xb5, 0xbb, 0x4a, 0x66, 0xdd, 0x44, 0x87, 0xdd, 0xdb, 0x44, 0x87, 0x76,
	0x4d, 0xa3, 0xcf, 0xb9, 0x08, 0x8d, 0xa5, 0xba, 0x64, 0x68, 0xf9, 0xe5, 0x50, 0x8d, 0x3e, 0x97,
	0x42, 0x98, 0x51, 0x77, 0x85, 0x37, 0x94, 0x10, 0xc4, 0xd8, 0x7a, 0x0f, 0x70, 0x49, 0x97, 0xa1,
	0xef, 0x39, 0xc1, 0x9c, 0xa0, 0x23, 0xa8, 0xcd, 0xb5, 0xc5, 0xe5, 0xc6, 0x0c, 0x3b, 0x73, 0xa0,
	0x36, 0x18, 0x6e, 0x1c, 0x49, 0xf1, 0x6b, 0x89, 0xa6, 0xb6, 0x35, 0x04, 0x94, 0xf1, 0xa4, 0x97,
	0xfe, 0xdf, 0xf9, 0xfe, 0xa8, 0x41, 0x45, 0xdd, 0x2c, 0xda, 0x87, 0x6a, 0x14, 0xfb, 0x64, 0x9a,
	0x9e, 0x75, 0x45, 0x98, 0x03, 0x17, 0xb5, 0xa0, 0xc2, 0x7c, 0x2a, 0xfc, 0xba, 0x60, 0x98, 0x4f,
	0x07, 0x6e, 0xaa, 0xf7, 0x52, 0x4e, 0xef, 0x5d, 0x30, 0xc2, 0xc8, 0xa3, 0x11, 0xe5, 0x2b, 0x79,
	0x66, 0xf5, 0x1e, 0xca, 0xae, 0x67, 0x24, 0x66, 0x3c, 0xbe, 0xb2, 0x53, 0x0c, 0xfa, 0x06, 0xca,
	0x7c, 0x15, 0x12, 0x79, 0x54, 0xf5, 0xde, 0x4e, 0x86, 0x95, 0xa5, 0x75, 0xbb, 0x0a, 0x89, 0x2d,
	0x01, 0xa8, 0x03, 0x8d, 0x24, 0x7c, 0x12, 0x7c, 0x0e, 0xe8, 0x2f, 0x01, 0xae, 0xa8, 0x62, 0x78,
	0xe4, 0x16, 0xf5, 0x74, 0xed, 0xcc, 0x88, 0xcf, 0x70, 0x55, 0x8a, 0x51, 0x5b, 0xe8, 0x7b, 0xd8,
	0xf1, 0x1d, 0xc6, 0xa7, 0xea, 0x0a, 0xa3, 0xa9, 0xba, 0x2f, 0x6c, 0xbc, 0x78, 0xb3, 0x4d, 0x11,
	0xd6, 0x57, 0x51, 0xaa, 0xe1, 0xa0, 0x77, 0x60, 0x4a, 0x2e, 0x21, 0xb2, 0x84, 0xa8, 0xf6, 0x22,
	0x51, 0x5d, 0xc4, 0x08, 0x75, 0x6a, 0x96, 0xb7, 0x50, 0xd5, 0x7a, 0xc3, 0xf0, 0x62, 0x70, 0x02,
	0x5d, 0x6b, 0x29, 0x9b, 0xeb, 0x2d, 0xa5, 0x0d, 0x86, 0x13, 0x86, 0x11, 0xbd, 0x27, 0x2e, 0xde,
	0x92, 0xd3, 0xa9, 0x9d, 0x6b, 0x37, 0xdb, 0x0f, 0xda, 0xcd, 0x1b, 0xa8, 0xa9, 0xd1, 0x74, 0xb6,
	0xc2, 0xf5, 0x67, 0x2a, 0xcb, 0x50, 0xb0, 0x8b, 0x95, 0xa8, 0xfb, 0x99, 0x4f, 0xe7, 0x9f, 0x89,
	0x8b, 0x1b, 0x92, 0x2b, 0x31, 0x45, 0xef, 0x8a, 0x88, 0x4f, 0x1c, 0x46, 0xa6, 0xd2, 0xe5, 0x05,
	0x0b, 0x6c, 0xaa, 0xeb, 0xd2, 0xfe, 0x0b, 0xed, 0x4e, 0x8b, 0xa5, 0x29, 0xa7, 0xe5, 0x58, 0xe6,
	0x48, 0x97, 0x4b, 0x8f, 0x63, 0x24, 0xb5, 0xa5, 0x2d, 0xf4, 0x11, 0x50, 0x52, 0x93, 0xf3, 0xb4,
	0x08, 0xf0, 0x8e, 0x4c, 0xf6, 0x28, 0x4b, 0x76, 0xbd, 0x40, 0xec, 0xa6, 0x8e, 0xcb, 0xd5, 0xe0,
	0x27, 0x68, 0x45, 0x84, 0x51, 0x3f, 0x16, 0x75, 0x90, 0xe7, 0xdb, 0xfd, 0x17, 0x7c, 0xbb, 0x59,
	0x68, 0x8e, 0xf2, 0x12, 0x50, 0xc6, 0xa3, 0x75, 0xc1, 0x70, 0xeb, 0xf1, 0x61, 0xe6, 0xf8, 0x9a,
	0x19, 0x5e, 0x89, 0x82, 0xa1, 0x01, 0xb4, 0x72, 0x24, 0xd9, 0x3a, 0x78, 0xef, 0x19, 0x9e, 0xdd,
	0x79, 0x3e, 0x47, 0x1d, 0x81, 0x0e, 0xc0, 0x90, 0xdd, 0x5a, 0x94, 0xee, 0xbe, 0x2c, 0xdd, 0xaa,
	0xb4, 0x07, 0x2e, 0x32, 0xa1, 0x14, 0x47, 0x3e, 0xc6, 0xf2, 0x7c, 0xc5, 0x10, 0xf5, 0xa0, 0xe6,
	0x30, 0xe6, 0x2d, 0x02, 0x42, 0x18, 0x3e, 0x90, 0xdd, 0xff, 0x69, 0x01, 0x64, 0x30, 0x74, 0x0a,
	0x86, 0x28, 0xfb, 0x88, 0x93, 0x08, 0xb7, 0x9f, 0xd3, 0x4c, 0x82, 0x12, 0x3d, 0x9f, 0x7b, 0xdc,
	0x27, 0xf8, 0x50, 0xf5, 0x7c, 0x69, 0xa0, 0x33, 0x30, 0xd2, 0x7f, 0xdc, 0x91, 0x5c, 0x7a, 0xff,
	0x31, 0x8f, 0xfe, 0x19, 0xd8, 0x29, 0xf0, 0x75, 0x0f, 0x8c, 0xa4, 0xf6, 0x51, 0x05, 0x8a, 0xa3,
	0x53, 0xf3, 0x95, 0xfc, 0xbe, 0x31, 0x0b, 0xf2, 0xdb, 0x33, 0x8b, 0xf2, 0x7b, 0x66, 0x96, 0xe4,
	0xf7, 0xad, 0x59, 0x7e, 0xfd, 0x03, 0xd4, 0xd2, 0xce, 0x82, 0x36, 0xa1, 0x3a, 0x19, 0x7e, 0x1c,
	0xde, 0xfc, 0x38, 0x34, 0x5f, 0xa1, 0x2a, 0x94, 0x2e, 0x26, 0x7d, 0xb3, 0x20, 0xbc, 0xef, 0xaf,
	0xce, 0x6f, 0x27, 0xf6, 0x95, 0x59, 0x44, 0x5b, 0x60, 0x7c, 0x9a, 0x5c, 0x8d, 0x6f, 0x07, 0x37,
	0x43, 0xb3, 0x24, 0xa6, 0x2e, 0xaf, 0xaf, 0xce, 0x87, 0x93, 0x91, 0x59, 0x16, 0xc6, 0xc8, 0xbe,
	0xb9, 0xbc, 0x1a, 0x8f, 0xcd, 0x8d, 0xde, 0x9f, 0x45, 0xd8, 0x7a, 0x67, 0xf7, 0x3f, 0x8c, 0xc7,
	0xea, 0xf1, 0x83, 0xae, 0xa1, 0xa2, 0xab, 0x3c, 0xb7, 0x93, 0x07, 0xef, 0x97, 0x36, 0x5e, 0x9f,
	0xd0, 0xef, 0x98, 0xc6, 0xaf, 0x5f, 0xfe, 0xfa, 0xbd, 0x58, 0xb3, 0xaa, 0x27, 0x4a, 0x43, 0x68,
	0x04, 0x46, 0xf2, 0xb0, 0x41, 0x07, 0xb9, 0x93, 0x79, 0xf8, 0xd8, 0x69, 0xe7, 0x7a, 0x6d, 0xca,
	0xd5, 0x92, 0x5c, 0x0d, 0x6b, 0x5b, 0x3e, 0xab, 0xee, 0x4f, 0x4f, 0xd4, 0x8f, 0x7e, 0x02, 0x90,
	0xbd, 0x60, 0xd0, 0x61, 0x16, 0xb8, 0xf6, 0xae, 0x79, 0x92, 0x75, 0x4f, 0xb2, 0x9a, 0x56, 0xfd,
	0x01, 0x2b, 0x43, 0xb7, 0x50, 0xef, 0x13, 0x7e, 0xae, 0x9b, 0xcd, 0xc8, 0x66, 0xa8, 0x99, 0x8f,
	0xfe, 0x67, 0xc2, 0x43, 0x49, 0xd8, 0xb2, 0x76, 0x12, 0x42, 0x27, 0xe3, 0x98, 0x55, 0x64, 0x3f,
	0x3c, 0xfb, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x09, 0xaa, 0xf5, 0xc1, 0x61, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DRGHSServiceClient is the client API for DRGHSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DRGHSServiceClient interface {
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*Response, error)
	ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*Response, error)
	GetApprovedPRs(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type dRGHSServiceClient struct {
	cc *grpc.ClientConn
}

func NewDRGHSServiceClient(cc *grpc.ClientConn) DRGHSServiceClient {
	return &dRGHSServiceClient{cc}
}

func (c *dRGHSServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/drghs.v0.DRGHSService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dRGHSServiceClient) GetIssue(ctx context.Context, in *GetIssueRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/drghs.v0.DRGHSService/GetIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dRGHSServiceClient) ListIssues(ctx context.Context, in *ListIssuesRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/drghs.v0.DRGHSService/ListIssues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dRGHSServiceClient) GetApprovedPRs(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/drghs.v0.DRGHSService/GetApprovedPRs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DRGHSServiceServer is the server API for DRGHSService service.
type DRGHSServiceServer interface {
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	GetIssue(context.Context, *GetIssueRequest) (*Response, error)
	ListIssues(context.Context, *ListIssuesRequest) (*Response, error)
	GetApprovedPRs(context.Context, *Request) (*Response, error)
}

func RegisterDRGHSServiceServer(s *grpc.Server, srv DRGHSServiceServer) {
	s.RegisterService(&_DRGHSService_serviceDesc, srv)
}

func _DRGHSService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DRGHSServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drghs.v0.DRGHSService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DRGHSServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DRGHSService_GetIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIssueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DRGHSServiceServer).GetIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drghs.v0.DRGHSService/GetIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DRGHSServiceServer).GetIssue(ctx, req.(*GetIssueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DRGHSService_ListIssues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIssuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DRGHSServiceServer).ListIssues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drghs.v0.DRGHSService/ListIssues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DRGHSServiceServer).ListIssues(ctx, req.(*ListIssuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DRGHSService_GetApprovedPRs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DRGHSServiceServer).GetApprovedPRs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drghs.v0.DRGHSService/GetApprovedPRs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DRGHSServiceServer).GetApprovedPRs(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _DRGHSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "drghs.v0.DRGHSService",
	HandlerType: (*DRGHSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _DRGHSService_Update_Handler,
		},
		{
			MethodName: "GetIssue",
			Handler:    _DRGHSService_GetIssue_Handler,
		},
		{
			MethodName: "ListIssues",
			Handler:    _DRGHSService_ListIssues_Handler,
		},
		{
			MethodName: "GetApprovedPRs",
			Handler:    _DRGHSService_GetApprovedPRs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "drghs_service.proto",
}
